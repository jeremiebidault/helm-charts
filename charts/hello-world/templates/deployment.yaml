---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.21.3
        ports:
        - containerPort: 80
          name: liveness-http
        readinessProbe:
          httpGet:
            path: /index.html
            port: liveness-http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /index.html
            port: liveness-http
          initialDelaySeconds: 15
          periodSeconds: 20

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: nginx.ingressroutetls
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`nginx.traefik.k3s.local.horizon.ovh`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: nginx
      port: 80
  tls:
    secretName: horizon.ovh

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: nginx.ingress
#   annotations:
#     nginx.ingress.kubernetes.io/affinity: cookie
# spec:
#   ingressClassName: nginx
#   tls:
#   - hosts:
#     - nginx.traefik.k3s.local.horizon.ovh
#   rules:
#   - host: nginx.traefik.k3s.local.horizon.ovh
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: nginx
#             port: 
#               number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  ports:
    - name: http
      port: 80
  selector:
    app: nginx

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-lb
#   annotations:
#     metallb.universe.tf/address-pool: static
# spec:
#   ports:
#   - name: http
#     port: 80
#   selector:
#     app: nginx
#   type: LoadBalancer
#   loadBalancerIP: 10.0.0.220

---
apiVersion: v1
kind: Secret
metadata:
  name: mysecret
  annotations:
    avp.kubernetes.io/path: "kv/data/aws"
stringData:
  aws_access_key_id: <aws_access_key_id>
  aws_secret_access_key: <aws_secret_access_key>
type: Opaque
