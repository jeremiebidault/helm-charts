affinity: ~
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #       - matchExpressions:
  #           - key: nodepool
  #             operator: In
  #             values:
  #               - medium
tolerations: ~
  # - effect: NoSchedule
  #   key: longhorn
  #   operator: Equal
  #   value: storage

volumes:
  prometheus: ~
  #   existingClaim: ~
  #   claimName: prmetheus-pvc
  #   storageClassName: longhorn
  #   accessModes: ReadWriteOnce
  #   size: 30Gi

ingress: ~
  # host: prometheus.devops.premiumventure.ch
  # annotations:
  #   traefik.ingress.kubernetes.io/router.entrypoints: websecure
  #   # traefik.ingress.kubernetes.io/router.middlewares: monitoring-prometheus-server-ipwhitelist@kubernetescrd
  # ingressClassName: traefik
  # tlsSecretName: premiumventure.ch

enableFeatureAgent: true

config: ~
# config:
#   prometheus.yml: |
#     global:
#       scrape_interval: 1m
#     remote_write:
#       - url: https://mimir.devops.premiumventure.ch/api/v1/push
#     scrape_configs:
#       - job_name: 'gitlab-ci-pipelines-exporter'
#         static_configs:
#           - targets: ['gitlab-ci-pipelines-exporter.gitlab-ci-pipelines-exporter.svc.c704aee4-c1f9-438e-9533-cc3bf06a6823.cluster.local:8080']
#       - job_name: 'node-exporter'
#         kubernetes_sd_configs:
#           - role: endpoints
#         relabel_configs:
#           - source_labels: [__meta_kubernetes_endpoints_name]
#             regex: 'node-exporter'
#             action: keep
#           - source_labels: [__meta_kubernetes_endpoint_node_name]
#             action: replace
#             target_label: instance
#       - job_name: 'kubernetes-apiservers'
#         kubernetes_sd_configs:
#           - role: endpoints
#         scheme: https
#         tls_config:
#           ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#         bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#         relabel_configs:
#           - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
#             action: keep
#             regex: default;kubernetes;https
#       - job_name: 'kubernetes-nodes'
#         scheme: https
#         tls_config:
#           ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#         bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#         kubernetes_sd_configs:
#           - role: node
#         relabel_configs:
#           - action: labelmap
#             regex: __meta_kubernetes_node_label_(.+)
#           - target_label: __address__
#             replacement: kubernetes.default.svc:443
#           - source_labels: [__meta_kubernetes_node_name]
#             regex: (.+)
#             target_label: __metrics_path__
#             replacement: /api/v1/nodes/${1}/proxy/metrics
#       - job_name: 'kubernetes-pods'
#         kubernetes_sd_configs:
#           - role: pod
#         relabel_configs:
#           - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
#             action: keep
#             regex: true
#           - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
#             action: replace
#             target_label: __metrics_path__
#             regex: (.+)
#           - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
#             action: replace
#             regex: ([^:]+)(?::\d+)?;(\d+)
#             replacement: $1:$2
#             target_label: __address__
#           - action: labelmap
#             regex: __meta_kubernetes_pod_label_(.+)
#           - source_labels: [__meta_kubernetes_namespace]
#             action: replace
#             target_label: kubernetes_namespace
#           - source_labels: [__meta_kubernetes_pod_name]
#             action: replace
#             target_label: kubernetes_pod_name
#       - job_name: 'kubernetes-service-endpoints'
#         kubernetes_sd_configs:
#           - role: endpoints
#         relabel_configs:
#           - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
#             action: keep
#             regex: true
#           - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
#             action: replace
#             target_label: __scheme__
#             regex: (https?)
#           - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
#             action: replace
#             target_label: __metrics_path__
#             regex: (.+)
#           - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
#             action: replace
#             target_label: __address__
#             regex: ([^:]+)(?::\d+)?;(\d+)
#             replacement: $1:$2
#           - action: labelmap
#             regex: __meta_kubernetes_service_label_(.+)
#           - source_labels: [__meta_kubernetes_namespace]
#             action: replace
#             target_label: kubernetes_namespace
#           - source_labels: [__meta_kubernetes_service_name]
#             action: replace
#             target_label: kubernetes_name
#       - job_name: 'kube-state-metrics'
#         static_configs:
#           - targets: ['kube-state-metrics.monitoring:8080']
#       - job_name: 'kubernetes-cadvisor'
#         scheme: https
#         tls_config:
#           ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#         bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#         kubernetes_sd_configs:
#           - role: node
#         relabel_configs:
#           - action: labelmap
#             regex: __meta_kubernetes_node_label_(.+)
#           - target_label: __address__
#             replacement: kubernetes.default.svc:443
#           - source_labels: [__meta_kubernetes_node_name]
#             regex: (.+)
#             target_label: __metrics_path__
#             replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
